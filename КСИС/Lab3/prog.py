import socket
import threading
import time

PORT = 5000
TCP_PORT = 6000
BUFFER_SIZE = 1024
my_ip = "192.168.1.102"
user_list = set()  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
continue_signal = True

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (UDP —Å–µ—Ä–≤–µ—Ä)
def receive_messages():
    global continue_signal
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    server_socket.bind((my_ip, PORT))
    while continue_signal:
        try:
            _, addr = server_socket.recvfrom(BUFFER_SIZE)
            user_ip = addr[0]
            if user_ip != my_ip and user_ip not in user_list:
                print(f"üì© –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({user_ip})")
                user_list.add(user_ip)
        except:
            break

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö —É–∑–ª–æ–≤ (UDP –∫–ª–∏–µ–Ω—Ç)
def send_broadcast():
    global continue_signal
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    client_socket.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
    broadcast_address = (f"{my_ip[:my_ip.rfind('.')]+'.255'}", PORT)
    while continue_signal:
        try:
            client_socket.sendto("".encode(), broadcast_address)
            time.sleep(5)
        except:
            break
    client_socket.close()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –∫–∞–∂–¥—ã–º —É–∑–ª–æ–º
def establish_tcp_connections():
    global continue_signal
    while continue_signal:
        for user_ip in list(user_list):
            try:
                client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                client_socket.connect((user_ip, TCP_PORT))
                message = input()
                if message == "0":
                    continue_signal = False
                    message = "–í—ã—Ö–æ–∂—É –∏–∑ —á–∞—Ç–∞"
                client_socket.sendall(message.encode())
                client_socket.close()
            except:
                break
        time.sleep(10)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–µ–º–∞ –≤—Ö–æ–¥—è—â–∏—Ö TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π (TCP —Å–µ—Ä–≤–µ—Ä)
def tcp_server():
    global continue_signal
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((my_ip, TCP_PORT))
    while continue_signal:
        try:
            server_socket.listen(1)
            conn, addr = server_socket.accept()
            data = conn.recv(BUFFER_SIZE).decode()
            print(f"{data}({addr})")
            conn.close()
        except:
            break

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
receive_thread = threading.Thread(target=receive_messages)
send_thread = threading.Thread(target=send_broadcast)
tcp_server_thread = threading.Thread(target=tcp_server)
tcp_client_thread = threading.Thread(target=establish_tcp_connections)

receive_thread.start()
send_thread.start()
tcp_server_thread.start()
tcp_client_thread.start()

receive_thread.join()
send_thread.join()
tcp_server_thread.join()
tcp_client_thread.join()

print("üîö –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã!")
